numeros <- c(1, 2, 3, 4, 5)
numeros
Numeros # note que houve um erro, não existe o objeto Numeros (maiúscula)
numeros <- c(1, 2, 3, 4, 5)
pessoas <- c("João", "Maria", "Pedro", "Paula")
pessoas
logico <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE)
logico_2 <- c(T, F, T, T, F, F)
logico_2
logico_2 = T
logico_2 = T
logico_2 <- c(T, F, T, T, F, F)
logico_2
logico_2 = T
logico_2
logico_2 < c(T, F, T, T, F, F)
logico_2 < c(T, F, T, T, F, F)
logico_2 <- c(T, F, T, T, F, F)
class(numeros)
class(pessoas)
class(logico)
logico <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE)
# Igualmente válido:
logico = c(T, F, T, T, F, F)
length(numeros)
length(pessoas)
length(logico)
logico
logico[TRUE]
logico[TRUE]
logico == T
pessoas == "Maria"
sequencia <- c(1:10) # esta é uma forma de gerar uma sequência de números
sequencia <- c(500:600)
sequencia
varios <- c(1, 2, 3, "Azul", "Verde", "Vermelho", TRUE, FALSE, TRUE)
varios <- c(1, 2, 3, "Azul", "Verde", "Vermelho", TRUE, FALSE, TRUE)
class(varios)
print(varios)
class(varios)
varios_2 <- c(425, 426, 427, TRUE, FALSE, FALSE)
class(varios_2)
print(varios_2)
print(varios)
numeros == 1
numeros * 2
triplo_numeros <- numeros * 3
metade_numeros <- numeros / 2
pessoas != "João"
sequencia > 550
sequencia >= 598
sequencia > 100
sequencia <= 100
altura <- factor(c("alto", "médio", "alto", "baixo", "médio", "alto"),
levels = c("baixo", "médio", "alto"),
labels = c("prédios baixos",
"prédios médios",
"prédios altos"))
class(altura)
altura
altura <- factor(c("alto", "médio", "alto", "baixo", "médio", "alto"),
levels = c("baixo", "médio", "alto"),
labels = c("prédios baixos",
"prédios médios",
"prédios altos"))
class(altura)
altura
respostas <- factor(c(1, 2, 2, 3, 1, 2, 3, 3, 1, 2, 1, 1, 3, 2, 3),
levels = c(1, 2, 3),
labels = c("discordo totalmente",
"não concordo, nem discordo",
"concordo totalmente"))
class(respostas)
respostas
banco_dados_um <- data.frame(var1 = c("pessoa 1", "pessoa 2", "pessoa 3"),
var2 = c(42, 55, 28))
print(banco_dados_um)
variavel_um <- c(1:10)
variavel_dois <- c(11:18, NA, NA)
variavel_tres <- c("a","b","c","d","e","f","g","h","i","j")
variavel_um
variavel_dois
banco_dados_dois <- data.frame(variavel_um, variavel_dois, variavel_tres)
banco_dados_dois
banco_dados_tres <- data.frame(posicao = variavel_um,
faltam = variavel_dois,
letras = variavel_tres)
View(banco_dados_tres)
load("(2) desempenho_aluno_escola.RData")
load("data/(2) desempenho_aluno_escola.RData")
`(2).desempenho_aluno_escola` <- read.table("~/Área de Trabalho/Semana do servidor/data/(2) desempenho_aluno_escola.RData", quote="\"")
View(`(2).desempenho_aluno_escola`)
df <- load("data/(2) desempenho_aluno_escola.RData")
load("data/(2) desempenho_aluno_escola.RData")
View(`(2).desempenho_aluno_escola`)
load("data/(2) desempenho_aluno_escola.RData")
View(desempenho_aluno_escola)
write.csv(desempenho_aluno_escola, file = "desempenho_aluno.csv")
write.csv(desempenho_aluno_escola, file = "data/desempenho_aluno.csv")
# Inicialmente, vamos importar um arquivo da própria extensão do R (.RData)
# A seguir, temos dados relacionados ao desempenho escolar de 2.000 pessoas
# Fonte dos dados: Fávero & Belfiore (2017, Capítulo 16)
desempenho_aluno <- read.csv("data/desempenho_aluno.csv", sep = ",", dec = ".")
# Inicialmente, vamos importar um arquivo da própria extensão do R (.RData)
# A seguir, temos dados relacionados ao desempenho escolar de 2.000 pessoas
# Fonte dos dados: Fávero & Belfiore (2017, Capítulo 16)
desempenho_aluno <- read.csv("data/desempenho_aluno.csv", sep = ",", dec = ".")
View(desempenho_aluno)
View(desempenho_aluno)
desempenho_aluno <- desempenho_aluno[,2:7]
View(desempenho_aluno)
desempenho_aluno
head(desempenho_aluno, n = 10)
head(desempenho_aluno, n = 15)
names(desempenho_aluno)
nrow(desempenho_aluno) # observações (linhas)
ncol(desempenho_aluno) # variáveis (colunas)
dim(desempenho_aluno) # ambos juntos (linhas, colunas)
str(desempenho_aluno)
desempenho_aluno$desempenho # Somente o print da variável
horas_estudo <- desempenho_aluno$horas # Armazenando em um vetor
rm(horas_estudo)
desempenho_aluno
# Qual é o valor do desempenho escolar (variável na 3ª coluna) do 1º aluno?
desempenho_aluno[1 , 3]
View(desempenho_aluno)
# Quais são os valores de todas as variáveis do 5º aluno?
desempenho_aluno[5 , ]
# Quais são os valores de todas as variáveis para os alunos de 7 a 12?
desempenho_aluno[c(7:12), ]
# Quais são as observações para a variável da 6ª coluna (tipo de escola?)?
desempenho_aluno[ , 6]
# No caso acima, também poderia ser indicada pelo nome da variável
desempenho_aluno[ , "priv"]
# Poderíamos reorganizar a ordem das variáveis
reorganiza <- desempenho_aluno[ , c(2,5,3,4,1,6)]
reorganiza
View(reorganiza)
View(reorganiza)
View(desempenho_aluno)
View(reorganiza)
View(desempenho_aluno)
View(reorganiza)
desempenho_aluno[desempenho_aluno$desempenho > 50,]
nrow(desempenho_aluno[desempenho_aluno$desempenho > 50,])
desempenho_aluno[desempenho_aluno$desempenho > 50,]
#################################
# Carregaro arquivo de dados
#################################
df <- read.csv("data/notas_calculo.csv")
corrplot::corrplot(df)
df
corrplot::corrplot(df[,c(1,2,4,8,9,10,11)])
df.cor <- df[,c(1,2,4,8,9,10,11)]
df.cor
sum(sapply(df, is.na))
colSums(is.na(df))
mean(df$media_final, na.rm = TRUE)
df$media_final[is.na(df$media_final)] <- mean(df$media_final, na.rm = TRUE)
#contar quantos NAs
colSums(is.na(df))
df$media_final[is.na(df$media_final)]
#################################
# Carregaro arquivo de dados
#################################
df <- read.csv("data/notas_calculo.csv")
df$media_final[is.na(df$media_final)]
mean(df$media_final, na.rm = TRUE)
df$media_final[is.na(df$media_final)] <- mean(df$media_final, na.rm = TRUE)
mean(df$media_final, na.rm = TRUE)
df$media_final
#contar quantos NAs
colSums(is.na(df))
df$numero_faltas[is.na(df$numero_faltas)] <- mean(df$numero_faltas, na.rm = TRUE)
#contar quantos NAs
colSums(is.na(df))
#gera um dataframe somente com as variáveis numéricas
df.cor <- df[,c(1,2,4,8,9,10,11)]
df.cor
#gera o mapa das correlações
corrplot(as.matrix(df.cor), method = 'number', sig.level = 0.05, cl.length=0.5, tl.cex=0.8,
tl.srt = 60, type="full", insig = "p-value", plotCI = "n", tl.col = "black",
addrect = 4, rect.col = 'blue', pch.cex = 0.9, addg = NULL, col=brewer.pal(n=8, name="PuOr"))
corrplot
library("corrplot")
#gera o mapa das correlações
corrplot(as.matrix(df.cor), method = 'number', sig.level = 0.05, cl.length=0.5, tl.cex=0.8,
tl.srt = 60, type="full", insig = "p-value", plotCI = "n", tl.col = "black",
addrect = 4, rect.col = 'blue', pch.cex = 0.9, addg = NULL, col=brewer.pal(n=8, name="PuOr"))
as.matrix(df.cor)
#gera o mapa das correlações
corrplot(as.matrix(df.cor), method = 'number')
corrplot(as.matrix(df.cor), type="upper", order="hclust", col=c("black", "white"),
bg="lightblue")
chart.Correlation(df.cor, histogram=FALSE, method = "pearson", pch=25)
library("PerformanceAnalytics")
chart.Correlation(df.cor, histogram=FALSE, method = "pearson", pch=25)
library("Hmisc")
cor <- rcorr(as.matrix(df.cor, type="pearson"))
df.cor <- as.data.frame(rho$r) # Matriz de correlações
df.cor <- as.data.frame(cor$r) # Matriz de correlações
df.cor
#gera o mapa das correlações
corrplot(as.matrix(df.cor), method = 'number', sig.level = 0.05, cl.length=0.5, tl.cex=0.8,
tl.srt = 60, type="full", insig = "p-value", plotCI = "n", tl.col = "black",
addrect = 4, rect.col = 'blue', pch.cex = 0.9, addg = NULL, col=brewer.pal(n=8, name="PuOr"))
corrplot(as.matrix(df.cor), type="upper", order="hclust", col=c("black", "white"),
bg="lightblue")
corrplot(as.matrix(df.cor), method = 'number', sig.level = 0.05)
corrplot(as.matrix(df.cor), method = 'square', sig.level = 0.05)
chart.Correlation(df.cor, histogram=FALSE, method = "pearson", pch=25)
chart.Correlation(df, histogram=FALSE, method = "pearson", pch=25)
#gera um dataframe somente com as variáveis numéricas
df <- df[,c(1,2,4,8,9,10,11)]
#gera um dataframe somente com as variáveis numéricas
df <- df[,c(1,2,4,8,9,10,11)]
library("corrplot")
library("Hmisc")
cor <- rcorr(as.matrix(df, type="pearson"))
df.cor <- as.data.frame(cor$r) # Matriz de correlações
#gera o mapa das correlações
corrplot(as.matrix(df.cor), method = 'square', sig.level = 0.05)
library("PerformanceAnalytics")
chart.Correlation(df, histogram=FALSE, method = "pearson", pch=25)
pib_paises <- read.csv("data/(2) pib_paises.csv",
sep = ",",
dec = ".")
pib_paises <- pib_paises[-c(267:271),-c(2,4)]
pib_paises
View(pib_paises)
nomes <- c("ano","paises_regioes","var_pib_capita","var_pib_total")
names(pib_paises) <- nomes
View(pib_paises)
pib_paises$var_pib_capita_ajust <- as.numeric(pib_paises$var_pib_capita)
pib_paises$var_pib_total_ajust <- as.numeric(pib_paises$var_pib_total)
summary(pib_paises$var_pib_capita_ajust)
summary(pib_paises$var_pib_total_ajust)
library(ggplot2) # Obs.: se já tiver carregado o tidyverse, não precisa fazê-lo
load("data/(2) perfil_investidor.RData")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil))
perfil_investidor$perfil <- factor(perfil_investidor$perfil,
levels = c("Conservador",
"Moderado",
"Agressivo"))
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil))
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil)) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
colours()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", vjust = 2) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", hjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
coord_flip() +
theme_light()
load("(2) desempenho_aluno.RData")
ggplot(data = desempenho_aluno) +
geom_histogram(aes(x = desempenho))
